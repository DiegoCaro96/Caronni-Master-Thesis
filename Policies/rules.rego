package rules
import future.keywords.if

import input.data_consumer
import input.method
import input.data_product

#import only the attributes of the data_consumer if is external
import input.attributes

#constraints 

user_is_doctor if data.attributes[input.data_consumer].role == "doctor"
user_is_doctor if input.attributes[input.data_consumer].role == "doctor"

user_is_researcher if data.attributes[input.data_consumer].researcher == true
user_is_researcher if input.attributes[input.data_consumer].researcher == true

user_is_owner if input.data_consumer == data.metadata[input.data_product].owner

resource_provided_by_researcher if data.attributes[data.metadata[input.data_product].owner].researcher == true

same_company if data.attributes[input.data_consumer].company == data.metadata[input.data_product].company


#authorizations

default allow := false
default encrypted := false
default anonymized := false

#The doctors can read and write their data.
allow if {
	user_is_doctor
	user_is_owner
    input.method == "GET"
}

allow if {
	user_is_doctor
	user_is_owner
    input.method == "POST"
}

#The research doctors can read every data.
allow if {
	user_is_doctor
	user_is_researcher
	input.method == "GET"
}

#The data generated by a research doctor can be read by other workers in the hospital where the research doctor works.
allow if {
	resource_provided_by_researcher
	same_company
	input.method == "GET"
}

#operations on the data

#The data is encrypted if it is provided by a research doctor.
encrypted if {
	data.attributes[data.metadata[input.data_product].owner].role == "doctor"
	data.attributes[data.metadata[input.data_product].owner].researcher == true   
}

#The data is anonymized if the request is done by an external member of the company.
anonymized if {
	not same_company   
}
